{"version":3,"sources":["router.js"],"names":[],"mappings":"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","file":"src/router/router.js","sourceRoot":"/Users/peteringram/Code/Angular2-Plate/node_modules/angular2/es6/dev/","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Promise,\n  PromiseWrapper,\n  EventEmitter,\n  ObservableWrapper} from 'angular2/src/facade/async';\nimport {Map,\n  MapWrapper,\n  List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank} from 'angular2/src/facade/lang';\nimport {RouteRegistry} from './route_registry';\nimport {Pipeline} from './pipeline';\nimport {Instruction} from './instruction';\nimport {RouterOutlet} from './router_outlet';\nexport class Router {\n  constructor(registry, pipeline, parent = null, name = '/') {\n    assert.argumentTypes(registry, RouteRegistry, pipeline, Pipeline, parent, Router, name, assert.type.any);\n    this.name = name;\n    this.navigating = false;\n    this.parent = parent;\n    this.previousUrl = null;\n    this._outlets = MapWrapper.create();\n    this._children = MapWrapper.create();\n    this._registry = registry;\n    this._pipeline = pipeline;\n    this._subject = new EventEmitter();\n  }\n  childRouter(outletName = 'default') {\n    if (!MapWrapper.contains(this._children, outletName)) {\n      MapWrapper.set(this._children, outletName, new ChildRouter(this, outletName));\n    }\n    return MapWrapper.get(this._children, outletName);\n  }\n  registerOutlet(outlet, name = 'default') {\n    assert.argumentTypes(outlet, RouterOutlet, name, assert.type.any);\n    MapWrapper.set(this._outlets, name, outlet);\n    return assert.returnType((this.renavigate()), Promise);\n  }\n  config(path, component, alias = null) {\n    assert.argumentTypes(path, assert.type.string, component, assert.type.any, alias, assert.type.string);\n    this._registry.config(this.name, path, component, alias);\n    return this.renavigate();\n  }\n  navigate(url) {\n    if (this.navigating) {\n      return assert.returnType((PromiseWrapper.resolve(true)), Promise);\n    }\n    this.lastNavigationAttempt = url;\n    var instruction = this.recognize(url);\n    if (isBlank(instruction)) {\n      return assert.returnType((PromiseWrapper.resolve(false)), Promise);\n    }\n    instruction.router = this;\n    this._startNavigating();\n    var result = this._pipeline.process(instruction).then((_) => {\n      ObservableWrapper.callNext(this._subject, instruction.matchedUrl);\n    }).then((_) => this._finishNavigating());\n    PromiseWrapper.catchError(result, (_) => this._finishNavigating());\n    return assert.returnType((result), Promise);\n  }\n  _startNavigating() {\n    this.navigating = true;\n  }\n  _finishNavigating() {\n    this.navigating = false;\n  }\n  subscribe(onNext) {\n    ObservableWrapper.subscribe(this._subject, onNext);\n  }\n  activateOutlets(instruction) {\n    return assert.returnType((this._queryOutlets((outlet, name) => {\n      return outlet.activate(instruction.getChildInstruction(name));\n    }).then((_) => instruction.mapChildrenAsync((instruction, _) => {\n      return instruction.router.activateOutlets(instruction);\n    }))), Promise);\n  }\n  traverseOutlets(fn) {\n    return assert.returnType((this._queryOutlets(fn).then((_) => mapObjAsync(this._children, (child, _) => child.traverseOutlets(fn)))), Promise);\n  }\n  _queryOutlets(fn) {\n    return assert.returnType((mapObjAsync(this._outlets, fn)), Promise);\n  }\n  recognize(url) {\n    assert.argumentTypes(url, assert.type.string);\n    return this._registry.recognize(url);\n  }\n  renavigate() {\n    var destination = isBlank(this.previousUrl) ? this.lastNavigationAttempt : this.previousUrl;\n    if (this.navigating || isBlank(destination)) {\n      return assert.returnType((PromiseWrapper.resolve(false)), Promise);\n    }\n    return assert.returnType((this.navigate(destination)), Promise);\n  }\n  generate(name, params) {\n    assert.argumentTypes(name, assert.type.string, params, assert.type.any);\n    return this._registry.generate(name, params);\n  }\n  static getRoot() {\n    return assert.returnType((new RootRouter(new Pipeline())), Router);\n  }\n}\nObject.defineProperty(Router, \"parameters\", {get: function() {\n    return [[RouteRegistry], [Pipeline], [Router], []];\n  }});\nObject.defineProperty(Router.prototype.registerOutlet, \"parameters\", {get: function() {\n    return [[RouterOutlet], []];\n  }});\nObject.defineProperty(Router.prototype.config, \"parameters\", {get: function() {\n    return [[assert.type.string], [], [assert.type.string]];\n  }});\nObject.defineProperty(Router.prototype.navigate, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(Router.prototype.activateOutlets, \"parameters\", {get: function() {\n    return [[Instruction]];\n  }});\nObject.defineProperty(Router.prototype.recognize, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(Router.prototype.generate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.any]];\n  }});\nexport class RootRouter extends Router {\n  constructor(pipeline) {\n    assert.argumentTypes(pipeline, Pipeline);\n    super(new RouteRegistry(), pipeline, null, '/');\n  }\n}\nObject.defineProperty(RootRouter, \"parameters\", {get: function() {\n    return [[Pipeline]];\n  }});\nclass ChildRouter extends Router {\n  constructor(parent, name) {\n    super(parent._registry, parent._pipeline, parent, name);\n    this.parent = parent;\n  }\n}\nfunction mapObjAsync(obj, fn) {\n  assert.argumentTypes(obj, Map, fn, assert.type.any);\n  return PromiseWrapper.all(mapObj(obj, fn));\n}\nObject.defineProperty(mapObjAsync, \"parameters\", {get: function() {\n    return [[Map], []];\n  }});\nfunction mapObj(obj, fn) {\n  var result = ListWrapper.create();\n  MapWrapper.forEach(obj, (value, key) => ListWrapper.push(result, fn(value, key)));\n  return assert.returnType((result), List);\n}\nObject.defineProperty(mapObj, \"parameters\", {get: function() {\n    return [[Map], []];\n  }});\n//# sourceMappingURL=router.js.map\n\n//# sourceMappingURL=./router.map"]}