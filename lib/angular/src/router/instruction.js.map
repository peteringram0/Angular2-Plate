{"version":3,"sources":["instruction.js"],"names":[],"mappings":"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","file":"src/router/instruction.js","sourceRoot":"/Users/peteringram/Code/Angular2-Plate/node_modules/angular2/es6/dev/","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Map,\n  MapWrapper,\n  StringMap,\n  StringMapWrapper,\n  List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {isPresent} from 'angular2/src/facade/lang';\nexport class RouteParams {\n  constructor(params) {\n    assert.argumentTypes(params, StringMap);\n    this.params = params;\n  }\n  get(param) {\n    assert.argumentTypes(param, assert.type.string);\n    return StringMapWrapper.get(this.params, param);\n  }\n}\nObject.defineProperty(RouteParams, \"parameters\", {get: function() {\n    return [[StringMap]];\n  }});\nObject.defineProperty(RouteParams.prototype.get, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nexport class Instruction {\n  constructor({params,\n    component,\n    children,\n    matchedUrl} = {}) {\n    this.matchedUrl = matchedUrl;\n    if (isPresent(children)) {\n      this._children = children;\n      var childUrl;\n      StringMapWrapper.forEach(this._children, (child, _) => {\n        childUrl = child.matchedUrl;\n      });\n      if (isPresent(childUrl)) {\n        this.matchedUrl += childUrl;\n      }\n    } else {\n      this._children = StringMapWrapper.create();\n    }\n    this.component = component;\n    this.params = params;\n  }\n  getChildInstruction(outletName) {\n    assert.argumentTypes(outletName, assert.type.string);\n    return StringMapWrapper.get(this._children, outletName);\n  }\n  forEachChild(fn) {\n    assert.argumentTypes(fn, Function);\n    StringMapWrapper.forEach(this._children, fn);\n  }\n  mapChildrenAsync(fn) {\n    return assert.returnType((mapObjAsync(this._children, fn)), Promise);\n  }\n  traverseSync(fn) {\n    this.forEachChild((childInstruction, _) => fn(this, childInstruction));\n    this.forEachChild((childInstruction, _) => childInstruction.traverseSync(fn));\n  }\n}\nObject.defineProperty(Instruction.prototype.getChildInstruction, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(Instruction.prototype.forEachChild, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nObject.defineProperty(Instruction.prototype.traverseSync, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nfunction mapObjAsync(obj, fn) {\n  assert.argumentTypes(obj, StringMap, fn, assert.type.any);\n  return PromiseWrapper.all(mapObj(obj, fn));\n}\nObject.defineProperty(mapObjAsync, \"parameters\", {get: function() {\n    return [[StringMap], []];\n  }});\nfunction mapObj(obj, fn) {\n  var result = ListWrapper.create();\n  StringMapWrapper.forEach(obj, (value, key) => ListWrapper.push(result, fn(value, key)));\n  return assert.returnType((result), List);\n}\nObject.defineProperty(mapObj, \"parameters\", {get: function() {\n    return [[StringMap], []];\n  }});\nexport var noopInstruction = new Instruction();\n//# sourceMappingURL=instruction.js.map\n\n//# sourceMappingURL=./instruction.map"]}