{"version":3,"sources":["pipe_registry.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,8IAAoB,UAAS,SAAQ;;;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,cAAoB,KAAG,QAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,YAAoB,KAAG,MAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,WAAoB,KAAG,KAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,iBAAoB,KAAG,WAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,wBAAoB,KAAG,kBAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAFZ,qBAAA,SAAQ,AAAC;AAUF,eAAM,aAAW,CACV,MAAK,CAAG;AAClB,aAAG,OAAO,EAAI,OAAK,CAAC;QACtB;AAXQ,AAuBV,aAvBiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,gBAY5C,GAAE,CAAF,UAAI,IAAG,CAAG,CAAA,GAAE,CAAG,CAAA,KAAI;AACjB,AAAI,cAAA,CAAA,aAAY,EAAI,CAAA,IAAG,OAAO,CAAE,IAAG,CAAC,CAAC;AACrC,eAAI,OAAM,AAAC,CAAC,aAAY,CAAC,CAAG;AAC1B,kBAAM,IAAI,cAAY,AAAC,EAAC,eAAe,EAAC,KAAG,EAAC,6BAA4B,EAAC,IAAE,EAAC,IAAE,EAAC,CAAC;YAClF;AAAA,AACI,cAAA,CAAA,cAAa,EAAI,CAAA,WAAU,KAAK,AAAC,CAAC,aAAY,GAAG,SAAC,UAAS;mBAAM,CAAA,UAAS,SAAS,AAAC,CAAC,GAAE,CAAC;YAAA,EAAC,CAAC;AAC9F,eAAI,OAAM,AAAC,CAAC,cAAa,CAAC,CAAG;AAC3B,kBAAM,IAAI,cAAY,AAAC,EAAC,eAAe,EAAC,KAAG,EAAC,6BAA4B,EAAC,IAAE,EAAC,IAAE,EAAC,CAAC;YAClF;AAAA,AACA,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,cAAa,OAAO,AAAC,CAAC,KAAI,CAAC,CAAC,CAAG,KAAG,CAAC,CAAC;UAChE,MArB8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,8BAAqC,CAAA;AA0B9C,WAAK,eAAe,AAAC,CAAC,YAAW,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAChE,eAAO,EAAC,GAAI,WAAS,AAAC,EAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,YAAW,UAAU,IAAI,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7E,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,GAAC,CAAG,EAAC,iBAAgB,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IA7B0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAgC6B","file":"src/change_detection/pipes/pipe_registry.js","sourceRoot":"/Users/peteringram/Code/Angular2-Plate/node_modules/angular2/es6/dev/","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank,\n  isPresent,\n  BaseException,\n  CONST} from 'angular2/src/facade/lang';\nimport {Pipe} from './pipe';\nimport {Injectable} from 'angular2/di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\nexport class PipeRegistry {\n  constructor(config) {\n    this.config = config;\n  }\n  get(type, obj, cdRef) {\n    var listOfConfigs = this.config[type];\n    if (isBlank(listOfConfigs)) {\n      throw new BaseException(`Cannot find '${type}' pipe supporting object '${obj}'`);\n    }\n    var matchingConfig = ListWrapper.find(listOfConfigs, (pipeConfig) => pipeConfig.supports(obj));\n    if (isBlank(matchingConfig)) {\n      throw new BaseException(`Cannot find '${type}' pipe supporting object '${obj}'`);\n    }\n    return assert.returnType((matchingConfig.create(cdRef)), Pipe);\n  }\n}\nObject.defineProperty(PipeRegistry, \"annotations\", {get: function() {\n    return [new Injectable()];\n  }});\nObject.defineProperty(PipeRegistry.prototype.get, \"parameters\", {get: function() {\n    return [[assert.type.string], [], [ChangeDetectorRef]];\n  }});\n//# sourceMappingURL=pipe_registry.js.map\n\n//# sourceMappingURL=./pipe_registry.map"]}