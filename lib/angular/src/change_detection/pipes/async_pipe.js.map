{"version":3,"sources":["async_pipe.js"],"names":[],"mappings":"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","file":"src/change_detection/pipes/async_pipe.js","sourceRoot":"/Users/peteringram/Code/Angular2-Plate/node_modules/angular2/es6/dev/","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Observable,\n  ObservableWrapper} from 'angular2/src/facade/async';\nimport {isBlank,\n  isPresent} from 'angular2/src/facade/lang';\nimport {Pipe,\n  NO_CHANGE} from './pipe';\nimport {ChangeDetectorRef} from '../change_detector_ref';\nexport class AsyncPipe extends Pipe {\n  constructor(ref) {\n    assert.argumentTypes(ref, ChangeDetectorRef);\n    super();\n    this._ref = ref;\n    this._latestValue = null;\n    this._latestReturnedValue = null;\n    this._subscription = null;\n    this._observable = null;\n  }\n  supports(obs) {\n    return assert.returnType((ObservableWrapper.isObservable(obs)), assert.type.boolean);\n  }\n  onDestroy() {\n    if (isPresent(this._subscription)) {\n      this._dispose();\n    }\n    ;\n  }\n  transform(obs) {\n    assert.argumentTypes(obs, Observable);\n    if (isBlank(this._subscription)) {\n      this._subscribe(obs);\n      return assert.returnType((null), assert.type.any);\n    }\n    if (obs !== this._observable) {\n      this._dispose();\n      return assert.returnType((this.transform(obs)), assert.type.any);\n    }\n    if (this._latestValue === this._latestReturnedValue) {\n      return assert.returnType((NO_CHANGE), assert.type.any);\n    } else {\n      this._latestReturnedValue = this._latestValue;\n      return assert.returnType((this._latestValue), assert.type.any);\n    }\n  }\n  _subscribe(obs) {\n    this._observable = obs;\n    this._subscription = ObservableWrapper.subscribe(obs, (value) => this._updateLatestValue(value), (e) => {\n      throw e;\n    });\n  }\n  _dispose() {\n    ObservableWrapper.dispose(this._subscription);\n    this._latestValue = null;\n    this._latestReturnedValue = null;\n    this._subscription = null;\n    this._observable = null;\n  }\n  _updateLatestValue(value) {\n    assert.argumentTypes(value, Object);\n    this._latestValue = value;\n    this._ref.requestCheck();\n  }\n}\nObject.defineProperty(AsyncPipe, \"parameters\", {get: function() {\n    return [[ChangeDetectorRef]];\n  }});\nObject.defineProperty(AsyncPipe.prototype.transform, \"parameters\", {get: function() {\n    return [[Observable]];\n  }});\nObject.defineProperty(AsyncPipe.prototype._subscribe, \"parameters\", {get: function() {\n    return [[Observable]];\n  }});\nObject.defineProperty(AsyncPipe.prototype._updateLatestValue, \"parameters\", {get: function() {\n    return [[Object]];\n  }});\nexport class AsyncPipeFactory {\n  supports(obs) {\n    return assert.returnType((ObservableWrapper.isObservable(obs)), assert.type.boolean);\n  }\n  create(cdRef) {\n    return assert.returnType((new AsyncPipe(cdRef)), Pipe);\n  }\n}\n//# sourceMappingURL=async_pipe.js.map\n\n//# sourceMappingURL=./async_pipe.map"]}