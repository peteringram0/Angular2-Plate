{"version":3,"sources":["directive_record.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,wEAAoB,UAAS,SAAQ;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,cAAoB,KAAG,QAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAFZ,uBAAA,SAAQ,AAAC,CAAE;AAGJ,eAAM,eAAa,CACZ,YAAW,CAAG,CAAA,cAAa,CAAG;AACxC,eAAK,cAAc,AAAC,CAAC,YAAW,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,eAAa,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC1F,aAAG,aAAa,EAAI,aAAW,CAAC;AAChC,aAAG,eAAe,EAAI,eAAa,CAAC;QACtC;AANQ,AAUV,aAViB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,kBAO5C,GAAI,KAAG,EAAI;AACT,mBAAU,IAAG,aAAa,EAAC,IAAG,EAAC,CAAA,IAAG,eAAe,EAAG;UACtD,MAR8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,kCAAqC,CAAA;AAa9C,WAAK,eAAe,AAAC,CAAC,cAAa,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACjE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;AAfL,wBAAA,SAAQ,AAAC;AAgBF,eAAM,gBAAc,CACb,cAAa,CAAG,CAAA,oBAAmB,CAAG,CAAA,YAAW,CAAG,CAAA,eAAc,CAAG;AAC/E,eAAK,cAAc,AAAC,CAAC,cAAa,CAAG,eAAa,CAAG,qBAAmB,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAG,aAAW,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAG,gBAAc,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AACvK,aAAG,eAAe,EAAI,eAAa,CAAC;AACpC,aAAG,qBAAqB,EAAI,qBAAmB,CAAC;AAChD,aAAG,aAAa,EAAI,aAAW,CAAC;AAChC,aAAG,gBAAgB,EAAI,gBAAc,CAAC;QACxC;AArBQ,AAyBV,aAzBiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,mBAsB5C,uBAAsB,CAAtB,UAAuB,AAAC,CAAE;AACxB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,aAAY,OAAO,AAAC,CAAC,IAAG,gBAAgB,CAAG,QAAM,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;UACtG,MAvB8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,oCAAqC,CAAA;AA4B9C,WAAK,eAAe,AAAC,CAAC,eAAc,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAClE,eAAO,EAAC,CAAC,cAAa,CAAC,CAAG,EAAC,MAAK,KAAK,QAAQ,CAAC,CAAG,EAAC,MAAK,KAAK,QAAQ,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;IA5B0B;EAC3B,CAAA;AADI,CAAC,CAAC;AA+BgC","file":"src/change_detection/directive_record.js","sourceRoot":"/Users/peteringram/Code/Angular2-Plate/node_modules/angular2/es6/dev/","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {ON_PUSH} from './constants';\nimport {StringWrapper} from 'angular2/src/facade/lang';\nexport class DirectiveIndex {\n  constructor(elementIndex, directiveIndex) {\n    assert.argumentTypes(elementIndex, assert.type.number, directiveIndex, assert.type.number);\n    this.elementIndex = elementIndex;\n    this.directiveIndex = directiveIndex;\n  }\n  get name() {\n    return `${this.elementIndex}_${this.directiveIndex}`;\n  }\n}\nObject.defineProperty(DirectiveIndex, \"parameters\", {get: function() {\n    return [[assert.type.number], [assert.type.number]];\n  }});\nexport class DirectiveRecord {\n  constructor(directiveIndex, callOnAllChangesDone, callOnChange, changeDetection) {\n    assert.argumentTypes(directiveIndex, DirectiveIndex, callOnAllChangesDone, assert.type.boolean, callOnChange, assert.type.boolean, changeDetection, assert.type.string);\n    this.directiveIndex = directiveIndex;\n    this.callOnAllChangesDone = callOnAllChangesDone;\n    this.callOnChange = callOnChange;\n    this.changeDetection = changeDetection;\n  }\n  isOnPushChangeDetection() {\n    return assert.returnType((StringWrapper.equals(this.changeDetection, ON_PUSH)), assert.type.boolean);\n  }\n}\nObject.defineProperty(DirectiveRecord, \"parameters\", {get: function() {\n    return [[DirectiveIndex], [assert.type.boolean], [assert.type.boolean], [assert.type.string]];\n  }});\n//# sourceMappingURL=directive_record.js.map\n\n//# sourceMappingURL=./directive_record.map"]}