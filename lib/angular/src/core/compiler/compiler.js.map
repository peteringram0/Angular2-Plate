{"version":3,"sources":["compiler.js"],"names":[],"mappings":"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","file":"src/core/compiler/compiler.js","sourceRoot":"/Users/peteringram/Code/Angular2-Plate/node_modules/angular2/es6/dev/","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Injectable,\n  Binding} from 'angular2/di';\nimport {Type,\n  isBlank,\n  isPresent,\n  BaseException,\n  normalizeBlank,\n  stringify} from 'angular2/src/facade/lang';\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {List,\n  ListWrapper,\n  Map,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {DirectiveMetadataReader} from './directive_metadata_reader';\nimport {Component,\n  Viewport,\n  DynamicComponent,\n  Decorator} from '../annotations/annotations';\nimport {AppProtoView} from './view';\nimport {DirectiveBinding} from './element_injector';\nimport {TemplateResolver} from './template_resolver';\nimport {View} from '../annotations/view';\nimport {ComponentUrlMapper} from './component_url_mapper';\nimport {ProtoViewFactory} from './proto_view_factory';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport * as renderApi from 'angular2/src/render/api';\nexport class CompilerCache {\n  constructor() {\n    this._cache = MapWrapper.create();\n  }\n  set(component, protoView) {\n    assert.argumentTypes(component, Type, protoView, AppProtoView);\n    MapWrapper.set(this._cache, component, protoView);\n  }\n  get(component) {\n    assert.argumentTypes(component, Type);\n    var result = MapWrapper.get(this._cache, component);\n    return assert.returnType((normalizeBlank(result)), AppProtoView);\n  }\n  clear() {\n    MapWrapper.clear(this._cache);\n  }\n}\nObject.defineProperty(CompilerCache, \"annotations\", {get: function() {\n    return [new Injectable()];\n  }});\nObject.defineProperty(CompilerCache.prototype.set, \"parameters\", {get: function() {\n    return [[Type], [AppProtoView]];\n  }});\nObject.defineProperty(CompilerCache.prototype.get, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\nexport class Compiler {\n  constructor(reader, cache, templateResolver, componentUrlMapper, urlResolver, renderer, protoViewFactory) {\n    assert.argumentTypes(reader, DirectiveMetadataReader, cache, CompilerCache, templateResolver, TemplateResolver, componentUrlMapper, ComponentUrlMapper, urlResolver, UrlResolver, renderer, renderApi.Renderer, protoViewFactory, ProtoViewFactory);\n    this._reader = reader;\n    this._compilerCache = cache;\n    this._compiling = MapWrapper.create();\n    this._templateResolver = templateResolver;\n    this._componentUrlMapper = componentUrlMapper;\n    this._urlResolver = urlResolver;\n    this._appUrl = urlResolver.resolve(null, './');\n    this._renderer = renderer;\n    this._protoViewFactory = protoViewFactory;\n  }\n  _bindDirective(directiveTypeOrBinding) {\n    if (directiveTypeOrBinding instanceof DirectiveBinding) {\n      return assert.returnType((directiveTypeOrBinding), DirectiveBinding);\n    } else if (directiveTypeOrBinding instanceof Binding) {\n      let meta = this._reader.read(directiveTypeOrBinding.token);\n      return assert.returnType((DirectiveBinding.createFromBinding(directiveTypeOrBinding, meta.annotation)), DirectiveBinding);\n    } else {\n      let meta = this._reader.read(directiveTypeOrBinding);\n      return assert.returnType((DirectiveBinding.createFromType(meta.type, meta.annotation)), DirectiveBinding);\n    }\n  }\n  compileInHost(componentTypeOrBinding) {\n    assert.argumentTypes(componentTypeOrBinding, assert.type.any);\n    var componentBinding = this._bindDirective(componentTypeOrBinding);\n    this._assertTypeIsComponent(componentBinding);\n    return assert.returnType((this._renderer.createHostProtoView('host').then((hostRenderPv) => {\n      return this._compileNestedProtoViews(null, hostRenderPv, [componentBinding], true);\n    })), assert.genericType(Promise, AppProtoView));\n  }\n  compile(component) {\n    assert.argumentTypes(component, Type);\n    var componentBinding = this._bindDirective(component);\n    this._assertTypeIsComponent(componentBinding);\n    var protoView = this._compile(componentBinding);\n    return assert.returnType((PromiseWrapper.isPromise(protoView) ? protoView : PromiseWrapper.resolve(protoView)), assert.genericType(Promise, AppProtoView));\n  }\n  _compile(componentBinding) {\n    var component = componentBinding.key.token;\n    var protoView = this._compilerCache.get(component);\n    if (isPresent(protoView)) {\n      return protoView;\n    }\n    var pvPromise = MapWrapper.get(this._compiling, component);\n    if (isPresent(pvPromise)) {\n      return pvPromise;\n    }\n    var template = this._templateResolver.resolve(component);\n    if (isPresent(template.renderer)) {\n      var directives = [];\n      pvPromise = this._renderer.createImperativeComponentProtoView(template.renderer).then((renderPv) => {\n        return this._compileNestedProtoViews(componentBinding, renderPv, directives, true);\n      });\n    } else {\n      var directives = ListWrapper.map(this._flattenDirectives(template), (directive) => this._bindDirective(directive));\n      var renderTemplate = this._buildRenderTemplate(component, template, directives);\n      pvPromise = this._renderer.compile(renderTemplate).then((renderPv) => {\n        return this._compileNestedProtoViews(componentBinding, renderPv, directives, true);\n      });\n    }\n    MapWrapper.set(this._compiling, component, pvPromise);\n    return pvPromise;\n  }\n  _compileNestedProtoViews(componentBinding, renderPv, directives, isComponentRootView) {\n    var nestedPVPromises = [];\n    var protoView = this._protoViewFactory.createProtoView(componentBinding, renderPv, directives);\n    if (isComponentRootView && isPresent(componentBinding)) {\n      var component = componentBinding.key.token;\n      this._compilerCache.set(component, protoView);\n      MapWrapper.delete(this._compiling, component);\n    }\n    var binderIndex = 0;\n    ListWrapper.forEach(protoView.elementBinders, (elementBinder) => {\n      var nestedComponent = elementBinder.componentDirective;\n      var nestedRenderProtoView = renderPv.elementBinders[binderIndex].nestedProtoView;\n      var elementBinderDone = (nestedPv) => {\n        elementBinder.nestedProtoView = nestedPv;\n        nestedPv.parentProtoView = isPresent(nestedComponent) ? null : protoView;\n      };\n      var nestedCall = null;\n      if (isPresent(nestedComponent)) {\n        if (!(nestedComponent.annotation instanceof DynamicComponent)) {\n          nestedCall = this._compile(nestedComponent);\n        }\n      } else if (isPresent(nestedRenderProtoView)) {\n        nestedCall = this._compileNestedProtoViews(componentBinding, nestedRenderProtoView, directives, false);\n      }\n      if (PromiseWrapper.isPromise(nestedCall)) {\n        ListWrapper.push(nestedPVPromises, nestedCall.then(elementBinderDone));\n      } else if (isPresent(nestedCall)) {\n        elementBinderDone(nestedCall);\n      }\n      binderIndex++;\n    });\n    var protoViewDone = (_) => {\n      var childComponentRenderPvRefs = [];\n      ListWrapper.forEach(protoView.elementBinders, (eb) => {\n        if (isPresent(eb.componentDirective)) {\n          var componentPv = eb.nestedProtoView;\n          ListWrapper.push(childComponentRenderPvRefs, isPresent(componentPv) ? componentPv.render : null);\n        }\n      });\n      this._renderer.mergeChildComponentProtoViews(protoView.render, childComponentRenderPvRefs);\n      return protoView;\n    };\n    if (nestedPVPromises.length > 0) {\n      return PromiseWrapper.all(nestedPVPromises).then(protoViewDone);\n    } else {\n      return protoViewDone(null);\n    }\n  }\n  _buildRenderTemplate(component, view, directives) {\n    var componentUrl = this._urlResolver.resolve(this._appUrl, this._componentUrlMapper.getUrl(component));\n    var templateAbsUrl = null;\n    if (isPresent(view.templateUrl)) {\n      templateAbsUrl = this._urlResolver.resolve(componentUrl, view.templateUrl);\n    } else {\n      templateAbsUrl = componentUrl;\n    }\n    return assert.returnType((new renderApi.ViewDefinition({\n      componentId: stringify(component),\n      absUrl: templateAbsUrl,\n      template: view.template,\n      directives: ListWrapper.map(directives, Compiler.buildRenderDirective)\n    })), renderApi.ViewDefinition);\n  }\n  static buildRenderDirective(directiveBinding) {\n    var ann = directiveBinding.annotation;\n    var renderType;\n    var compileChildren = true;\n    if ((ann instanceof Component) || (ann instanceof DynamicComponent)) {\n      renderType = renderApi.DirectiveMetadata.COMPONENT_TYPE;\n    } else if (ann instanceof Viewport) {\n      renderType = renderApi.DirectiveMetadata.VIEWPORT_TYPE;\n    } else if (ann instanceof Decorator) {\n      renderType = renderApi.DirectiveMetadata.DECORATOR_TYPE;\n      compileChildren = ann.compileChildren;\n    }\n    var readAttributes = [];\n    ListWrapper.forEach(directiveBinding.dependencies, (dep) => {\n      if (isPresent(dep.attributeName)) {\n        ListWrapper.push(readAttributes, dep.attributeName);\n      }\n    });\n    return assert.returnType((new renderApi.DirectiveMetadata({\n      id: stringify(directiveBinding.key.token),\n      type: renderType,\n      selector: ann.selector,\n      compileChildren: compileChildren,\n      hostListeners: isPresent(ann.hostListeners) ? MapWrapper.createFromStringMap(ann.hostListeners) : null,\n      hostProperties: isPresent(ann.hostProperties) ? MapWrapper.createFromStringMap(ann.hostProperties) : null,\n      properties: isPresent(ann.properties) ? MapWrapper.createFromStringMap(ann.properties) : null,\n      readAttributes: readAttributes\n    })), renderApi.DirectiveMetadata);\n  }\n  _flattenDirectives(template) {\n    assert.argumentTypes(template, View);\n    if (isBlank(template.directives))\n      return assert.returnType(([]), assert.genericType(List, Type));\n    var directives = [];\n    this._flattenList(template.directives, directives);\n    return assert.returnType((directives), assert.genericType(List, Type));\n  }\n  _flattenList(tree, out) {\n    assert.argumentTypes(tree, assert.genericType(List, assert.type.any), out, assert.genericType(List, Type));\n    for (var i = 0; i < tree.length; i++) {\n      var item = tree[i];\n      if (ListWrapper.isList(item)) {\n        this._flattenList(item, out);\n      } else {\n        ListWrapper.push(out, item);\n      }\n    }\n  }\n  _assertTypeIsComponent(directiveBinding) {\n    assert.argumentTypes(directiveBinding, DirectiveBinding);\n    if (!(directiveBinding.annotation instanceof Component)) {\n      throw new BaseException(`Could not load '${stringify(directiveBinding.key.token)}' because it is not a component.`);\n    }\n  }\n}\nObject.defineProperty(Compiler, \"annotations\", {get: function() {\n    return [new Injectable()];\n  }});\nObject.defineProperty(Compiler, \"parameters\", {get: function() {\n    return [[DirectiveMetadataReader], [CompilerCache], [TemplateResolver], [ComponentUrlMapper], [UrlResolver], [renderApi.Renderer], [ProtoViewFactory]];\n  }});\nObject.defineProperty(Compiler.prototype.compileInHost, \"parameters\", {get: function() {\n    return [[assert.type.any]];\n  }});\nObject.defineProperty(Compiler.prototype.compile, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\nObject.defineProperty(Compiler.prototype._compile, \"parameters\", {get: function() {\n    return [[DirectiveBinding]];\n  }});\nObject.defineProperty(Compiler.prototype._flattenDirectives, \"parameters\", {get: function() {\n    return [[View]];\n  }});\nObject.defineProperty(Compiler.prototype._flattenList, \"parameters\", {get: function() {\n    return [[assert.genericType(List, assert.type.any)], [assert.genericType(List, Type)]];\n  }});\nObject.defineProperty(Compiler.prototype._assertTypeIsComponent, \"parameters\", {get: function() {\n    return [[DirectiveBinding]];\n  }});\n//# sourceMappingURL=compiler.js.map\n\n//# sourceMappingURL=./compiler.map"]}