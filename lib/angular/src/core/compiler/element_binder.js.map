{"version":3,"sources":["element_binder.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,2HAAoB,UAAS,SAAQ;;;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,UAAoB,KAAG,IAAkB,CAAC;AAA1C,cAAoB,KAAG,QAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,uBAAoB,KAAG,iBAAkB,CAAC;AAA1C,eAAoB,KAAG,CAAC;IAEhB,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,iBAAoB,KAAG,CAAC;IAEhB,CADuB;AACzB,UAAM;AAFZ,sBAAA,SAAQ,AAAC;AAUF,eAAM,cAAY,CACX,KAAI,CAAG,CAAA,MAAK,CAAG,CAAA,gBAAe,CAAG,CAAA,oBAAmB,CAAG,CAAA,kBAAiB,CAAG,CAAA,iBAAgB,CAAG;AACxG,eAAK,cAAc,AAAC,CAAC,KAAI,CAAG,IAAE,CAAG,OAAK,CAAG,cAAY,CAAG,iBAAe,CAAG,IAAE,CAAG,qBAAmB,CAAG,CAAA,QAAO,qBAAqB,CAAG,mBAAiB,CAAG,iBAAe,CAAG,kBAAgB,CAAG,iBAAe,CAAC,CAAC;AAC9M,aAAI,OAAM,AAAC,CAAC,KAAI,CAAC,CAAG;AAClB,gBAAM,IAAI,cAAY,AAAC,CAAC,yBAAwB,CAAC,CAAC;UACpD;AAAA,AACA,aAAG,qBAAqB,EAAI,qBAAmB,CAAC;AAChD,aAAG,mBAAmB,EAAI,mBAAiB,CAAC;AAC5C,aAAG,kBAAkB,EAAI,kBAAgB,CAAC;AAC1C,aAAG,OAAO,EAAI,OAAK,CAAC;AACpB,aAAG,MAAM,EAAI,MAAI,CAAC;AAClB,aAAG,iBAAiB,EAAI,iBAAe,CAAC;AACxC,aAAG,cAAc,EAAI,KAAG,CAAC;AACzB,aAAG,gBAAgB,EAAI,KAAG,CAAC;QAC7B;AAtBQ,AA6BV,aA7BiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAuB5C,2BAAiB,CAAjB,UAAkB,AAAC,CAAE;AACnB,iBAAO,CAAA,SAAQ,AAAC,CAAC,IAAG,mBAAmB,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,IAAG,gBAAgB,CAAC,CAAC;UAC9E;AACA,4BAAkB,CAAlB,UAAmB,AAAC,CAAE;AACpB,iBAAO,CAAA,SAAQ,AAAC,CAAC,IAAG,mBAAmB,CAAC,CAAA,EAAK,CAAA,OAAM,AAAC,CAAC,IAAG,gBAAgB,CAAC,CAAC;UAC5E;AAAA,aA3B8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,gCAAqC,CAAA;AAgC9C,WAAK,eAAe,AAAC,CAAC,aAAY,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAChE,eAAO,EAAC,CAAC,GAAE,CAAC,CAAG,EAAC,aAAY,CAAC,CAAG,EAAC,GAAE,CAAC,CAAG,EAAC,QAAO,qBAAqB,CAAC,CAAG,EAAC,gBAAe,CAAC,CAAG,EAAC,gBAAe,CAAC,CAAC,CAAC;QACjH,CAAC,CAAC,CAAC;IAhC0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAmC8B","file":"src/core/compiler/element_binder.js","sourceRoot":"/Users/peteringram/Code/Angular2-Plate/node_modules/angular2/es6/dev/","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {int,\n  isBlank,\n  isPresent,\n  BaseException} from 'angular2/src/facade/lang';\nimport * as eiModule from './element_injector';\nimport {DirectiveBinding} from './element_injector';\nimport {List,\n  StringMap} from 'angular2/src/facade/collection';\nimport * as viewModule from './view';\nexport class ElementBinder {\n  constructor(index, parent, distanceToParent, protoElementInjector, componentDirective, viewportDirective) {\n    assert.argumentTypes(index, int, parent, ElementBinder, distanceToParent, int, protoElementInjector, eiModule.ProtoElementInjector, componentDirective, DirectiveBinding, viewportDirective, DirectiveBinding);\n    if (isBlank(index)) {\n      throw new BaseException('null index not allowed.');\n    }\n    this.protoElementInjector = protoElementInjector;\n    this.componentDirective = componentDirective;\n    this.viewportDirective = viewportDirective;\n    this.parent = parent;\n    this.index = index;\n    this.distanceToParent = distanceToParent;\n    this.hostListeners = null;\n    this.nestedProtoView = null;\n  }\n  hasStaticComponent() {\n    return isPresent(this.componentDirective) && isPresent(this.nestedProtoView);\n  }\n  hasDynamicComponent() {\n    return isPresent(this.componentDirective) && isBlank(this.nestedProtoView);\n  }\n}\nObject.defineProperty(ElementBinder, \"parameters\", {get: function() {\n    return [[int], [ElementBinder], [int], [eiModule.ProtoElementInjector], [DirectiveBinding], [DirectiveBinding]];\n  }});\n//# sourceMappingURL=element_binder.js.map\n\n//# sourceMappingURL=./element_binder.map"]}