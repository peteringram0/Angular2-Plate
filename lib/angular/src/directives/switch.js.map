{"version":3,"sources":["switch.js"],"names":[],"mappings":"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","file":"src/directives/switch.js","sourceRoot":"/Users/peteringram/Code/Angular2-Plate/node_modules/angular2/es6/dev/","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Decorator,\n  Viewport} from 'angular2/src/core/annotations/annotations';\nimport {ViewContainerRef} from 'angular2/src/core/compiler/view_container_ref';\nimport {isPresent,\n  isBlank,\n  normalizeBlank} from 'angular2/src/facade/lang';\nimport {ListWrapper,\n  List,\n  MapWrapper,\n  Map} from 'angular2/src/facade/collection';\nimport {Parent} from 'angular2/src/core/annotations/visibility';\nexport class Switch {\n  constructor() {\n    this._valueViewContainers = MapWrapper.create();\n    this._activeViewContainers = ListWrapper.create();\n    this._useDefault = false;\n  }\n  set value(value) {\n    this._emptyAllActiveViewContainers();\n    this._useDefault = false;\n    var containers = MapWrapper.get(this._valueViewContainers, value);\n    if (isBlank(containers)) {\n      this._useDefault = true;\n      containers = normalizeBlank(MapWrapper.get(this._valueViewContainers, _whenDefault));\n    }\n    this._activateViewContainers(containers);\n    this._switchValue = value;\n  }\n  _onWhenValueChanged(oldWhen, newWhen, viewContainer) {\n    assert.argumentTypes(oldWhen, assert.type.any, newWhen, assert.type.any, viewContainer, ViewContainerRef);\n    this._deregisterViewContainer(oldWhen, viewContainer);\n    this._registerViewContainer(newWhen, viewContainer);\n    if (oldWhen === this._switchValue) {\n      viewContainer.remove();\n      ListWrapper.remove(this._activeViewContainers, viewContainer);\n    } else if (newWhen === this._switchValue) {\n      if (this._useDefault) {\n        this._useDefault = false;\n        this._emptyAllActiveViewContainers();\n      }\n      viewContainer.create();\n      ListWrapper.push(this._activeViewContainers, viewContainer);\n    }\n    if (this._activeViewContainers.length === 0 && !this._useDefault) {\n      this._useDefault = true;\n      this._activateViewContainers(MapWrapper.get(this._valueViewContainers, _whenDefault));\n    }\n  }\n  _emptyAllActiveViewContainers() {\n    var activeContainers = this._activeViewContainers;\n    for (var i = 0; i < activeContainers.length; i++) {\n      activeContainers[i].remove();\n    }\n    this._activeViewContainers = ListWrapper.create();\n  }\n  _activateViewContainers(containers) {\n    assert.argumentTypes(containers, assert.genericType(List, ViewContainerRef));\n    if (isPresent(containers)) {\n      for (var i = 0; i < containers.length; i++) {\n        containers[i].create();\n      }\n      this._activeViewContainers = containers;\n    }\n  }\n  _registerViewContainer(value, container) {\n    assert.argumentTypes(value, assert.type.any, container, ViewContainerRef);\n    var containers = MapWrapper.get(this._valueViewContainers, value);\n    if (isBlank(containers)) {\n      containers = ListWrapper.create();\n      MapWrapper.set(this._valueViewContainers, value, containers);\n    }\n    ListWrapper.push(containers, container);\n  }\n  _deregisterViewContainer(value, container) {\n    assert.argumentTypes(value, assert.type.any, container, ViewContainerRef);\n    if (value == _whenDefault)\n      return ;\n    var containers = MapWrapper.get(this._valueViewContainers, value);\n    if (containers.length == 1) {\n      MapWrapper.delete(this._valueViewContainers, value);\n    } else {\n      ListWrapper.remove(containers, container);\n    }\n  }\n}\nObject.defineProperty(Switch, \"annotations\", {get: function() {\n    return [new Decorator({\n      selector: '[switch]',\n      properties: {'value': 'switch'}\n    })];\n  }});\nObject.defineProperty(Switch.prototype._onWhenValueChanged, \"parameters\", {get: function() {\n    return [[], [], [ViewContainerRef]];\n  }});\nObject.defineProperty(Switch.prototype._activateViewContainers, \"parameters\", {get: function() {\n    return [[assert.genericType(List, ViewContainerRef)]];\n  }});\nObject.defineProperty(Switch.prototype._registerViewContainer, \"parameters\", {get: function() {\n    return [[], [ViewContainerRef]];\n  }});\nObject.defineProperty(Switch.prototype._deregisterViewContainer, \"parameters\", {get: function() {\n    return [[], [ViewContainerRef]];\n  }});\nexport class SwitchWhen {\n  constructor(viewContainer, sswitch) {\n    assert.argumentTypes(viewContainer, ViewContainerRef, sswitch, Switch);\n    this._value = _whenDefault;\n    this._switch = sswitch;\n    this._viewContainer = viewContainer;\n  }\n  set when(value) {\n    this._switch._onWhenValueChanged(this._value, value, this._viewContainer);\n    this._value = value;\n  }\n}\nObject.defineProperty(SwitchWhen, \"annotations\", {get: function() {\n    return [new Viewport({\n      selector: '[switch-when]',\n      properties: {'when': 'switch-when'}\n    })];\n  }});\nObject.defineProperty(SwitchWhen, \"parameters\", {get: function() {\n    return [[ViewContainerRef], [Switch, new Parent()]];\n  }});\nexport class SwitchDefault {\n  constructor(viewContainer, sswitch) {\n    assert.argumentTypes(viewContainer, ViewContainerRef, sswitch, Switch);\n    sswitch._registerViewContainer(_whenDefault, viewContainer);\n  }\n}\nObject.defineProperty(SwitchDefault, \"annotations\", {get: function() {\n    return [new Viewport({selector: '[switch-default]'})];\n  }});\nObject.defineProperty(SwitchDefault, \"parameters\", {get: function() {\n    return [[ViewContainerRef], [Switch, new Parent()]];\n  }});\nvar _whenDefault = new Object();\n//# sourceMappingURL=switch.js.map\n\n//# sourceMappingURL=./switch.map"]}