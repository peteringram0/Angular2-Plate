{"version":3,"sources":["hammer_gestures.js"],"names":[],"mappings":"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","file":"src/render/dom/events/hammer_gestures.js","sourceRoot":"/Users/peteringram/Code/Angular2-Plate/node_modules/angular2/es6/dev/","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {HammerGesturesPluginCommon} from './hammer_common';\nimport {isPresent,\n  BaseException} from 'angular2/src/facade/lang';\nexport class HammerGesturesPlugin extends HammerGesturesPluginCommon {\n  constructor() {\n    super();\n  }\n  supports(eventName) {\n    assert.argumentTypes(eventName, assert.type.string);\n    if (!super.supports(eventName))\n      return assert.returnType((false), assert.type.boolean);\n    if (!isPresent(window.Hammer)) {\n      throw new BaseException(`Hammer.js is not loaded, can not bind ${eventName} event`);\n    }\n    return assert.returnType((true), assert.type.boolean);\n  }\n  addEventListener(element, eventName, handler, shouldSupportBubble) {\n    assert.argumentTypes(element, assert.type.any, eventName, assert.type.string, handler, Function, shouldSupportBubble, assert.type.boolean);\n    if (shouldSupportBubble)\n      throw new BaseException('Hammer.js plugin does not support bubbling gestures.');\n    var zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n    zone.runOutsideAngular(function() {\n      var mc = new Hammer(element);\n      mc.get('pinch').set({enable: true});\n      mc.get('rotate').set({enable: true});\n      mc.on(eventName, function(eventObj) {\n        zone.run(function() {\n          handler(eventObj);\n        });\n      });\n    });\n  }\n}\nObject.defineProperty(HammerGesturesPlugin.prototype.supports, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(HammerGesturesPlugin.prototype.addEventListener, \"parameters\", {get: function() {\n    return [[], [assert.type.string], [Function], [assert.type.boolean]];\n  }});\n//# sourceMappingURL=hammer_gestures.es6.map\n\n//# sourceMappingURL=./hammer_gestures.map"]}